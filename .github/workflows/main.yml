name: DVJA DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write  # Required to commit files to the repository
  security-events: write

jobs:
  dvja-scan:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Java environment
    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Step 3: Build the project with Maven
    - name: Build with Maven
      run: mvn clean package

    # Step 4: Build Docker image 
    - name: Build Docker image
      run: |
        docker build -t dvja:${{ github.sha }} .

    # Step 5: Run Trivy vulnerability scanner and generate SARIF file
    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: dvja:${{ github.sha }}
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'HIGH,CRITICAL'
        ignore-unfixed: true
    
    # Step 6: Scan project dependencies with Trivy (SCA)
    - name: Scan filesystem for SCA vulnerabilities with Trivy
      run: |
        trivy fs --format sarif --output trivy-sca-results.sarif --severity HIGH,CRITICAL .

    # Step 7: Upload Trivy scan results to GitHub Security tab
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with: 
        sarif_file: 'trivy-results.sarif'
        
    - name: Upload Trivy SCA scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-sca-results.sarif'
